name: Numerics
targetClass: stencil.modules.Numerics
description: Math functions to supplement the standard ones from JavaMath.

defaults:
  defaultSpecializer: !spec "[range: LAST, split: 0]"
  facets:
    - {name: map, memUse: FUNCTION, prototype: !proto "double VALUE"}
    - {name: query, memUse: FUNCTION, prototype: !proto "double VALUE"}

operators:
  - name: Accumulate
    facets:
      - {name: map, memUse: FUNCTION, prototype: !proto "double VALUE"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double VALUE"}
      
  - name: Abs
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double abs"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double abs"}

  - name: Add
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double sum"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double sum"}

  - name: Add1
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double sum"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double sum"}

  - name: AsNumber
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double value"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double value"}

  - name: Div
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "int quotient"}
      - {name: query, memUse: FUNCTION, prototype: !proto "int quotient"}


  - name: Divide
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double quotient"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double quotient"}


  - name: Log
    defaultSpecializer:  !spec "[base: NULL, range: LAST, split: 0]"
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double log"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double log"}

  - name: Max
    facets:
     - {name: map, memUse: FUNCTION, prototype: !proto "double max"}
     - {name: query, memUse: FUNCTION, prototype: !proto "double max"}
       
  - name: Min
    facets:
     - {name: map, memUse: FUNCTION, prototype: !proto "double min"}
     - {name: query, memUse: FUNCTION, prototype: !proto "double min"}

  - name: Mod
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double mod"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double mod"}

  - name: Mult
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double product"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double product"}
  
  - name: Negate
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double value"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double value"}

  - name: Nearest
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double value"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double value"}


  - name: ParseInt
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double value"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double value"}

  - name: Sine
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double sin"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double sin"}

  - name: Cosine
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double cos"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double cos"}

  - name: Tangent
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double tan"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double tan"}  
  
  - name: Sub
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double diff"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double diff"}

  - name: Sub1
    facets:
      - {name: map,   memUse: FUNCTION, prototype: !proto "double diff"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double diff"}

  - name: Sum
    defaultSpecializer: !spec "[range: ALL, split:0]"
    target: Add
    facets:
      - {name: map, memUse: FUNCTION, prototype: !proto "double sum"}
      - {name: query, memUse: FUNCTION, prototype: !proto "double sum"}
      