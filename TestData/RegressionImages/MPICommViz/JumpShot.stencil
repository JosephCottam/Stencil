stream overheads(op, rank, cpu, start, end,r,g,b)
  : Text["./diss_16.viz", sep:"\\s+|;", skip:0, strict:false]
stream trans(op, source, dest, start, end, size, G, r,g,b) 
  : Text["./diss_16.viz", sep:"\\s+|;", skip:0, strict:false]

order (overheads | trans)


layer baseline["LINE"]
guide pointLabels from ID
   Y: Layout(ID)
   X: -20
   REGISTRATION: "RIGHT"
   TEXT: Format("Rank %s", ID)
default
   PEN_COLOR: Color{Gray90}
from overheads
	ID: rank
	X2: Timescale(start) -> FullMax(_)
	(Y1, Y2): Layout(rank) -> (_,_)
from trans
	ID: source
	X2: Timescale(start) -> FullMax(_)
	(Y1,Y2): Layout(source) ->(_,_)


layer compressions["SHAPE"]
from overheads
	filter(op =~ "clocalop")
	ID: Count()
	Y: Layout(rank) 
	X: Timescale(start)
	FILL_COLOR : Color{Purple}
	SIZE: 15
	REGISTRATION: "CENTER"
	
layer overhead["LINE"]
from overheads
	filter(op !~ "clocalop") 
	ID: Count()
	(Y1, Y2): Layout(rank) -> (_,_)
	X1: Timescale(start)
	X2: Timescale(end)
	PEN_COLOR : ColorByOp(op)
   PEN: WeightByOp(op)


layer coms["LINE"]
from trans
   ID: Count() 
	Y1: Layout(source)
	Y2: Layout(dest)
	X1: Timescale(start)
	X2: Timescale(end)
	PEN_COLOR : ColorByOp("msg")
	CAP2: "ARROW"

operator ColorByOp(op) -> (C)
	(op =~ "osend") => C: Color{SlateBlue}
	(op =~ "orecv") => C: Color{MediumSlateBlue}
	(op =~ "transmission") => C: Color{FireBrick}
	default => C: Color{BLACK, 125}

operator WeightByOp(op) -> (W)
	(op =~ "osend") => W : Stroke{1}
 	(op =~ "orecv") => W : Stroke{1}
	(op =~ "transmission") => W: Stroke{5}
	default => W: Stroke{2}
   
	
operator Layout (rank)->(Y)
  default => (Y) : Mult(-20, rank)
 

operator Timescale(time) -> (time)
  default => time : Div(time, 50)
