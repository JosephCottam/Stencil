STREAM: File
NAME: trans
HEADER: op source dest start end size G r g b
SEPARATOR: \s+
SOURCE: ./diss_16.viz
SKIP: 0
STRICT: false
STREAM: File
NAME: overheads
HEADER: op rank cpu start end r g b
SEPARATOR: \s+
SOURCE: ./diss_16.viz
SKIP: 0
STRICT: false

stream ranks(rank, label)
stream overheads(op, rank, cpu, start, end, r,g,b, skewedStart, skewedEnd)
stream trans(op, source, dest, start, end, size, G, r,g,b, skewedStart, skewedEnd) 

order ranks > (overheads | trans)

layer labels[TEXT]
from ranks
	ID: label
	TEXT: label
	X: -10
	Y: Layout(rank)
	FONT_COLOR: @Color{GRAY70}
	REGISTRATION: "RIGHT"
from overheads
	filter (start > margin)
	prefilter(start, margin): Spacer.query() -> Add(5000,_) -> (start, VALUE)
	
	ID: start
	TEXT: start
	X: Timescale(skewedStart)
	Y: -10    
	FONT_COLOR: @Color{GRAY70}
	REGISTRATION: "LEFT"
	ROTATION: "VERTICAL"
	() : Spacer.map(start)
from overheads
	filter (end > margin)
	prefilter(end, margin): Spacer.query() -> Add(5000,_) -> (end, VALUE)
	
	ID: end
	TEXT: end
	X: Timescale(skewedEnd)
	Y: -10    
	FONT_COLOR: @Color{GRAY70}
	REGISTRATION: "LEFT"
	ROTATION: "VERTICAL"
	() : Spacer.map(end)

operator Spacer base Max[range: ALL]

layer baseline[LINE]
from overheads
	ID: rank
	X.2: Timescale(skewedStart) -> Max[range: ALL](_)
	STROKE_COLOR: @Color{Gray90}
	(Y.1, Y.2): Layout(rank) -> (_,_)
from trans
	ID: source
	X.2: Timescale(skewedStart) -> Max[range: ALL](_) ->(_,_)
	STROKE_COLOR: @Color{Gray90}
	(Y.1,Y.2): Layout(source) ->(_,_)


layer compressions[SHAPE]
from overheads
	filter(op =~ "clocalop")
	ID: Count()
	Y: Layout(rank) 
	X: Timescale(skewedStart)
	FILL_COLOR : @Color{Purple}
	SIZE: 15
	REGISTRATION: "CENTER"
	
layer overhead[LINE]
from overheads
	filter(op !~ "clocalop") 
	ID: Count()
	(Y.1, Y.2): Layout(rank) -> (_,_)
	X.1: Timescale(skewedStart)
	X.2: Timescale(skewedEnd)
	STROKE_COLOR : ColorByOp(op)
    STROKE_WEIGHT: WeightByOp(op)


layer coms[LINE]
from trans
    ID: Counter()
	Y.1: Layout(source)
	Y.2: Layout(dest)
	X.1: Timescale(skewedStart)
	X.2: Timescale(skewedEnd)
	STROKE_COLOR : ColorByOp(op)
	CAP2: "ARROW"

operator ColorByOp(op) -> (C)
	(op =~ "osend") => C: @Color{SlateBlue}
	(op =~ "orecv") => C: @Color{MediumSlateBlue}
	(op =~ "transmission") => C: @Color{FireBrick}
	ALL => C: @Color{BLACK, .5}

operator WeightByOp(op) -> (W)
	(op =~ "osend") => W : 1
 	(op =~ "orecv") => W : 1
	(op =~ "transmission") => W: .5
	ALL => W: 2
   
	
operator Layout (rank)->(Y)
  ALL => (Y) : Mult(20, rank)
 

operator Timescale(time) -> (time)
  ALL => time : Div(time, 50)
