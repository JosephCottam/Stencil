STREAM: File
NAME: Reg
HEADER: Name
SEPARATOR: \s+
SOURCE: ./RegistrationData.txt
STRICT: TRUE
SKIP: 0
STREAM: File
NAME: Reg2
HEADER: Name
SEPARATOR: \s+
SOURCE: ./RegistrationData.txt
STRICT: TRUE
SKIP: 0


stream Reg(Name)
stream Reg2(Name)

order Reg > Reg2

layer Points
from Reg
	ID: Name
	SIZE: 4
	X: Count(Name) -> (VALUE)
	REGISTRATION: Name

layer Points2
from Reg
   ID : Name
   X: Count(Name) -> (VALUE)
   Y: 10
   FILL_COLOR: @Color{RED}
   REGISTRATION:  Name
   SIZE: 4

layer Marks
from Reg2
   ID : Name
   SIZE: 3
   (X,Y): Points.find(Name) -> (X,Y)
   SHAPE: "CROSS"
   FILL_COLOR: @Color{RED}
   REGISTRATION: "CENTER"

layer Text[TEXT]
from Reg
   ID : Name
   TEXT: Name
   X: 5
   Y: Count(Name) -> Mult(VALUE, 2) -> Add(20, VALUE) -> (VALUE)
   REGISTRATION:  Name

layer VerticalText[TEXT]
from Reg
   ID : Name
   TEXT: Name
   Y: 150
   X: Count(Name) -> Mult(VALUE, 2) -> Add(200, VALUE) -> (VALUE)
   REGISTRATION:  Name
	ROTATION: "VERTICAL"



operator Count(C) -> (VALUE)
   ALL => VALUE: Index(C) -> Mult(10, VALUE) -> (VALUE)
