stream Degrees(Deg) : Text["./degrees.txt"]

stream Semis(Deg)
from Degrees
  Deg: ToTuple(0,90) ->Map(@Add, "map", *, Deg) -> *

stream Quads(Deg)
from Semis
   Deg: Deg
from Semis
   Deg: Add(180, Deg)

layer DoubleCap["LINE"]
default
  CAP1: "ARROW"
  CAP2: "ARROW"
from Semis
  ID  : IDS()
  X1 : Cosine(Deg) -> Mult(_,-50)
  Y1 : Sine(Deg) -> Mult(_,-50)
  X2 : Cosine(Deg) -> Mult(_,50)
  Y2 : Sine(Deg) -> Mult(_,50)
  PEN_COLOR: ColorBy(Deg)
  
layer SingleCap1["LINE"]
from Quads
    ID  : IDS()
    (X1, Y1) : (125,0)
    X2 : Cosine(Deg) -> Mult(_,50) -> Add(_, 125)
    Y2 : Sine(Deg) -> Mult(_,50) 
    CAP2: "ARROW"
    PEN_COLOR: ColorBy(Deg)

layer SingleCap2["LINE"]
from Quads
    ID  : IDS()
    (X2, Y2) : (250, 0)
    X1 : Cosine(Deg) -> Mult(_,50) -> Add(_, 250)
    Y1 : Sine(Deg) -> Mult(_,50) 
    CAP1: "ARROW"
    PEN_COLOR: ColorBy(Deg)

operator IDS()->(v) : Count()

operator ColorBy(Deg) -> (C)
  prefilter(quad) : Div(Deg, 90)
  (prefilter.quad = 0) => C: Color{BLACK}
  (prefilter.quad = 1) => C: Color{GREEN}
  (prefilter.quad = 2) => C: Color{BLUE}
  (prefilter.quad = 3) => C: Color{PURPLE}
  default   => C: Color{RED, 100}

