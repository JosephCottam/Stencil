import Dates 

stream Stocks(Date,Open,High,Low,Close,Volume) from Text["./google_stocks.csv"]
stream Mouse(X, Y, DELTA_X, DELTA_Y, BUTTON, SHIFT, CNTRL, COMMAND, CLICK_COUNT) from Mouse

stream AlignedStocks(Date, Open)
from Stocks
  Date : Parse[f:"dd-MMM-yy"](Date)     /*@\label{stocks:parseDate}@*/
  Open : Open

layer Ticker["POLY_POINT"]		/*Poly-point is a group of groups of line segments.*/
guide
   axis Linear from Y
   axis[unit: "MONTH"] Date from X
     label.TEXT: Parse.format[f:"MMM yy"](Input)    /*@\label{stocks:monthSample}@*/

from AlignedStocks
   ID: TimeStep(Date)
   GROUP: "Google"
   ORDER: Count()
   X: TimeStep(Date)
   Y: Open  
   PEN: Stroke{1}
   PEN_COLOR: Color{BLUE}

layer Averages["POLY_POINT"]
from AlignedStocks
   ID: Ids()
   GROUP: "Google_30"
   ORDER: Count()
   X: TimeStep(Date)
   Y: Range["-30..n"](@Mean, Open)	    /*Average the most recent 30 values.*/
   PEN: Stroke{1}
   PEN_COLOR: Color{LIME,150}
from AlignedStocks
   ID: Ids()
   GROUP: "Google_ALL"
   ORDER: Count()
   X: TimeStep(Date)
   Y: Range[ALL](@Mean, Open)		    /*Average all values.*/
   PEN: Stroke{1}
   PEN_COLOR: Color{CRIMSON,150}
from AlignedStocks
   ID: Ids()
   GROUP: "Google_20"
   ORDER: Count()
   X: TimeStep(Date)
   Y: Range["-30 .. -10"](@Mean, Open) /*Average that lags by 10 and includes 20 values.*/
   PEN: Stroke{1}
   PEN_COLOR: Color{ORANGE,150}


layer Selected["TEXT"]			/*@\label{stocks:beginInteractive}@*/
from Mouse
  filter(prefilter.X != NULL)
  prefilter(X,Y) : Nearest(X,3) -> Ticker.find(_) -> (Ticker.X, Ticker.Y) 
  ID : "Selected"
  TEXT: prefilter.Y
  REGISTRATION: "LEFT"
  IMPLANT: "POINT"
  X: prefilter.X
  Y: Nearest(X,3) -> Ticker.find(_) -> Add(50, prefilter.Y)
from Mouse
  filter(prefilter.X = NULL)
  prefilter(X,Y) : Nearest(X,3) -> Ticker.find(_) -> Print(Ticker.X, Ticker.Y) -> (Ticker.X, Ticker.Y) 
  ID : "Selected"
  TEXT: "---"

layer Highlight["LINE"]
from Mouse
  ID : "Highlight"
  (X1, X2) : Nearest(X, 3) -> (_, _)
  Y1 : Ticker.bounds() -> Sub(Ticker.Y, Ticker.H) 
  Y2 : Ticker.bounds() -> Ticker.Y
  PEN : Stroke{3}
  PEN_COLOR: Color{BLUE, 100}		/*@\label{stocks:endInteractive}@*/

operator Ids : Count

operator TimeStep (T) -> (S)
default => (S) : Range[ALL](@DateMin, T) 
                   -> DateDiff("DAYS", Range, T) 
                   -> Mult(_, 3)

operator DateMin : Min[c:"Date"]  
