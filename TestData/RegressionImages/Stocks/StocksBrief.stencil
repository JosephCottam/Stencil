import Dates

stream Stocks(Date,Open,High,Low,Close,Volume) : Text["./google_stocks.csv"]

stream AlignedStocks(Date, Open)
from Stocks
  Date : Parse[f:"dd-MMM-yy"](Date)
  Open : Open

layer Ticker["POLY_POINT"]		/*Poly-point is a group of groups of line segments.*/
guide
   sumLegend from PEN_COLOR, from GROUP
   axis[implant:"POINT"] Linear from Y
   axis[unit: "MONTH", implant:"POINT"] Date from X
     label.TEXT: Parse.format[f:"MMM yy"](Input)

from AlignedStocks
   ID: AutoID(4) -> *
   GROUP: MultiResult("Base", "Avg20", "Avg30", "AvgAll") -> *
   ORDER: Count()
   X: TimeStep(Date)
   Y: MapApply(@Echo, @Avg20, @Avg30, @AvgAll, Open) -#> *
   PEN: Stroke{1}
   PEN_COLOR: 
		ToTuple("BLUE", "LIME,150", "CRIMSON,150", "ORANGE,150") 
			-> Map(@Color, "map", ToTuple.*) -> *


/*TODO: Move facet in specializer...maybe as optional (if not in specializer, expect it as 2nd arg)*/
operator Avg20 (v)->(a) : Range["-30..-10"](@Mean,"map", v)
operator Avg30 (v) -> (a) : Range["-30..n"](@Mean,"map", v)
operator AvgAll (v) -> (a) : Range[ALL](@Mean, "map", v)

operator Ids : Count 

operator TimeStep (T) -> (S)
default => (S) : DateMin(T) 
                   -> DateDiff("DAYS", DateMin, T) 
                   -> Mult(_, 3)

operator DateMin : FullMin[c:"Date"]
