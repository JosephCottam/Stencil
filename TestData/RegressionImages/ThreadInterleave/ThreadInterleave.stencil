import BrewerPalettes
import LongMath

const width : 8

stream MethodCalls(Method, Dir, Time) : Text["Viewpoint_5000.btrace", ":\\s", skip:0]

stream Priors ()
from MethodCalls
   filter(Dir =~ "Entry")  
   () : Entry.put(Method, Time)

stream MethodSpans (Method, Start, Stop)
from MethodCalls
   filter(Dir =~ "Return")
   local(Start) : Entry.get(Method)
   local(Stop) : Entry.get(Method) -> EnsureTime(_, Time)
   Method : Method
   Start: Range[ALL](@Min[c:"Long"], local.Start) -> Sub(local.Start, _)
   Stop: Range[ALL](@Min[c:"Long"], local.Stop) -> Sub(local.Stop, _)

operator EnsureTime (start, stop) -> (stop)
 prefilter(span) : Sub(stop, start)
 (prefilter.span =0) => stop : Add1(stop) 
 default =>     stop : stop

operator Entry : Dict[fields: "start"]

layer Renders["LINE"]
guide
   axis[axisLabel: "Activity"] from Y1
   axis[sample: "linear", stride: 50, axisLabel: "Elapsed Milliseconds"] from X1
from MethodSpans
	ID: Count()
	PEN: Stroke{{width}::BUTT}
	PEN_COLOR: color(Method)
	X1: Start
	X2: Stop
	Y1:* Rank(Method) -> Mult(width,_) -> Mult(-1,_)
	Y2:* Rank(Method) -> Mult(width,_) -> Mult(-1,_)

operator color(m) -> (c)
  (m=~"U.*") => c: Color{GREEN,100}
  (m=~"R.*") => c: Color{BLUE,100}
  (m=~"L.*") => c: Color{RED,20}
