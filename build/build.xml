
<!--Should be run from the command line with "-lib ../Library/:../Library/JUNG/" /-->
    
 <project name="Stencil" default="Stencil" basedir="..">
 	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
 	<taskdef resource="org/apache/tools/ant/antlr/antlib.xml"/>
 	
 	<property name="core" location="Core" />
    <property name="modules" location="Modules" />
    <property name="test" location="Test" />
    <property name="explore" location="Explore" />
    
 	<property name="target" location="bin" />
 	<property name="runtimeLibrary" location="./Library/"/>
 	<property name="grammars" location ="${core}/stencil/parser/grammars/"/>
 	<property name="parser" location ="${core}/stencil/parser/string/"/>
 	<property name="ast" location ="/stencil/parser/tree/"/>
 	<property name="interpreter" location ="${core}/stencil/interpreter/"/>
 	 	
 	
    <!-- Just the core stencil grammar, not the additional processing.
         Which grammar is specified at the command line with -Dn=...   -->
    <target name="WorkingGrammar">
        <antlr3
            target="${grammars}/${n}.g"
            outputdirectory="${parser}"
            libdirectory="${parser}"
        />
    </target>
 		
 		
 	<target name="Stencil" depends="Transformers, Infos, Validators, Interpreter, Compile"/>
 	
    <target name="Compile">
            <javac srcdir="${core}" destdir="${target}" includeantruntime="false">
            <classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
            <!-- compilerarg value="-Xlint"/ -->
        </javac>
        <javac srcdir="${modules}" destdir="${target}"  includeantruntime="false">
            <classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
            <!-- compilerarg value="-Xlint"/ -->
        </javac>
        <copy todir="${target}">
            <fileset dir="${modules}">
               <include name="**/*.yml" />
            </fileset>
            <fileset dir="${core}">
               <include name="**/*.yml" />
            </fileset>
        </copy>
        <javac srcdir="${explore}" destdir="${target}"  includeantruntime="false"> 
            <classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
            <!-- compilerarg value="-Xlint"/ -->
        </javac>
        <javac srcdir="${test}" destdir="${target}"  includeantruntime="false">
            <classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
            <!-- compilerarg value="-Xlint"/ -->
        </javac>
    </target>

	<!-- Just the core stencil grammar, not the additional processing.-->
 	<target name="StencilGrammar">
 		<antlr3
			target="${grammars}/Stencil.g"
			outputdirectory="${parser}"
		/>
 	</target>

 	
 	<!--All of the tree manipulations prior to the interpreter-->
    <target name="Transformers" depends="StencilGrammar">
        <foreach target="antlrBuild" param="file" inheritall="true">
            <fileset dir="${grammars}/transformers"/>
            <param name="antlrTarget" value="${parser}"/>
        </foreach>
    </target>

    <target name="Infos" depends="StencilGrammar">
        <foreach target="antlrBuild" param="file" inheritall="true">
           <fileset dir="${grammars}/info" />
           <param name="antlrTarget" value="${parser}/info"/>
        </foreach>
    </target>

 	
    <target name="Validators" depends="StencilGrammar">
    	<foreach target="antlrBuild" param="file" inheritall="true">
    	   <fileset dir="${grammars}/validators" />
           <param name="antlrTarget" value="${parser}/validators"/>
    	</foreach>
    </target>

    <target name="Interpreter" depends="StencilGrammar">
    	<foreach target="antlrBuild" param="file" inheritall="true">
    	   <fileset dir="${interpreter}" includes="*.g"/>
           <param name="antlrTarget" value="${interpreter}"/>
    	</foreach>
    </target>

 	
 	
 	<target name="antlrBuild">
        <antlr3
            target="${file}"
            outputdirectory="${antlrTarget}"
            libdirectory="${parser}"
        />          
    </target>
 	
 	
 	<target name="Release" depends="Stencil">
 		<ant antfile="./build/Deploy.xml" inheritRefs="true"/>
	</target> 

    <target name="Release-NoBuild">
        <ant antfile="./build/Deploy.xml" inheritRefs="true"/>
    </target> 
 	
 	<!-- Just test with whatever is already built-->
 	<target name="TestFast" depends=""> 
        <ant antfile="./build/Test.xml" inheritRefs="true"/>
    </target>


    <!-- Just test with whatever is already built, but  just the specified tests-->
    <target name="TestOne" depends=""> 
        <ant antfile="./build/Test.xml" inheritRefs="true" target="OneTest"/>
    </target>

 	<target name="Test" depends="Stencil"> 
 		<ant antfile="./build/Test.xml" inheritRefs="true"/>
	</target>
 </project>