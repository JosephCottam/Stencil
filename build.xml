<!--If ANTLR3 task is not already installed, this script should be run with
    "-lib ./Library/antlr3-ant.jar" /-->
    
 <project name="Stencil" default="Stencil" basedir=".">
 	<property name="src" location="Core" />
 	<property name="target" location="bin" />
 	<property name="grammars" location ="${src}/stencil/parser/"/>
 	<property name="interpreter" location ="${src}/stencil/interpreter/"/>
 	<property name="runtimeLibrary" location="./Library/"/>
 	
 	<target name="CurrentWorkingGrammar">
 		<antlr 
			target="${grammars}/LiftSharedConstantRules.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antcall target="EclipseRefresh"/>
 	</target>
 	
 	<target name="Stencil" depends="StencilTransformer, TreeAdapter, Interpreter, Validators, ModuleData">
		<javac srcdir="${src}" destdir="${target}">
			<classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
			<!-- compilerarg value="-Xlint"/ -->
		</javac>
 	 	<antcall target="EclipseRefresh"/>
 	</target>

 	<target name="Interpreter" depends="StencilGrammar">
 		<property name="dest" location="${interpreter}"/>
 		<property name="lib" location="${grammars}/string"/>

 		<antlr
 			target="${interpreter}/UpdateGuides.g"
			outputdirectory="${dest}"
 			libdirectory="${lib}"
 		/>
 		<antlr
 			target="${interpreter}/NeedsGuides.g"
			outputdirectory="${dest}"
 			libdirectory="${lib}"
 		/>
 		<antlr
 			target="${interpreter}/DynamicRule.g"
			outputdirectory="${dest}"
 			libdirectory="${lib}"
 		/> 		
 	 	<antcall target="EclipseRefresh"/>
 	</target>
 	

	<!-- Just the core stencil grammar, not the additional processing.-->
 	<target name="StencilGrammar">
 		<antlr 
			target="${grammars}/Stencil.g"
			outputdirectory="${grammars}/string/"
		/>

 	 	<antcall target="EclipseRefresh"/>
 	</target>


 	<target name="EclipseRefresh" if="eclipse.running">
 		<eclipse.refreshLocal resource="Stencil/Core/" depth="infinite" />
 	</target>
 			
 	
 	<!--All of the tree manipulations prior to the interpreter-->
 	<target name="StencilTransformer" depends="StencilGrammar">
 		<antlr
			target="${grammars}/Imports.g"
			outputdirectory="${grammars}/string/"
		/>
 		<antlr
 			target="${grammars}/DefaultSpecializers.g"
 			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/EnsureOrders.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/AdHocOperators.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/SetOperators.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/EnsureGuideOp.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/AutoGuide.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/GuideSpecializers.g"
			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/DefaultPack.g"
 			outputdirectory="${grammars}/string/"
 		/>
 		<antlr
 			target="${grammars}/DereferenceOperators.g"
			outputdirectory="${grammars}/string/"
 		/> 
 		<antlr
 			target="${grammars}/TupleRefChain.g"
			outputdirectory="${grammars}/string/"
 		/> 
 		<antlr
 			target="${grammars}/SeparateTargets.g"
			outputdirectory="${grammars}/string/"
		/> 	
 		<antlr
 			target="${grammars}/NumeralizeTupleRefs.g"
			outputdirectory="${grammars}/string/"
 		/> 
 		<antlr
 			target="${grammars}/FrameTupleRefs.g"
			outputdirectory="${grammars}/string/"
 		/> 
 		<antlr 
			target="${grammars}/LiftSharedConstantRules.g"
			outputdirectory="${grammars}/string/"
 		/>
 	 	<antcall target="EclipseRefresh"/>
 	</target>

 	<target name="Validators" depends="StencilGrammar">
 		<property name="validators" location="${grammars}/validators"/>
 		<property name="lib" location="${grammars}/string"/>
 		
 		<antlr
 			target="${validators}/RangeValidator.g"
 			outputdirectory="${validators}"
 			libdirectory="${lib}"
 		/>
 		<antlr
 			target="${validators}/PythonValidator.g"
 			outputdirectory="${validators}"
 			libdirectory="${lib}"
 		/>
 		<antlr
			target="${validators}/StreamDeclarationValidator.g"
			outputdirectory="${validators}"
			libdirectory="${lib}"
		/>
 	</target>
 		
 	
 	<target name="ModuleData">
 		<property name="modulesUtil" location="${src}/stencil/operator/module/util/"/>
 		<antlr
 			target="${modulesUtil}/ModuleData.g"
			outputdirectory="${modulesUtil}"
 		/>
 	 	<antcall target="EclipseRefresh"/>

 	</target>
 	


 	<target name="TreeAdapterGrammar" depends="StencilGrammar">
 		<antlr
 			target="${grammars}/StencilTreeAdapter.g"
 			outputdirectory="${grammars}/tree/"
 		/>
 	 	<antcall target="EclipseRefresh"/>
	</target>

 	<target name="TreeAdapter" depends="TreeAdapterGrammar, StencilBuild">
		<java classname="stencil.util.build.GenerateTreeAdapter" fork="true">
			<classpath>
				<pathelement path="${target}"/>
				<pathelement path="${java.class.path}"/>
			    <fileset dir="${runtimeLibrary}" includes="*.jar"/>
			</classpath>
			<arg value="${grammars}/string/Stencil.tokens" />
			<arg value="${grammars}/StencilTreeAdapter.stg" />
			<arg value="${grammars}/tree/StencilTreeAdapter.java" />
		</java>
 	 	<antcall target="EclipseRefresh"/> 		
 	</target>

 	<target name="StencilBuild">
 		<property name="dir" value="/stencil/util/build"/>
 		<mkdir dir="${target}${dir}" />
 		<javac sourcepath="" srcdir="${src}${dir}" destdir="${target}">
			<classpath><fileset dir="${runtimeLibrary}" includes="*.jar"/></classpath>
 		</javac>
 	</target>

 	<target name="Release_With_Build" depends="Stencil,Release" />
 	
 	<target name="Release">
 		<property name="release" location="./release"/>
 		<property name="JarFile" value="Stencil.jar"/>
 		<tstamp><format property="today" pattern="ddMMMyyy"/></tstamp>
 		<property name="result" value="Stencil_${today}.zip"/>

 		<!--Clear up prior attempts-->
 		<delete dir="${release}"/>
 		<delete file="${result}"/>
 		<mkdir dir="${release}"/>

 		
 		<!--Create jar file-->
 		<delete file="${JarFile}"/>
 		 		
 		<pathconvert property="jarClasspath" pathsep=" " dirsep="/">
 			<map from="${runtimeLibrary}" to="./lib"/>
 	 		<path id="library.Classpath">
 	 			<fileset dir="${runtimeLibrary}">
 	 				<include name="*.jar"/>
 	 				<exclude name="antlr-3.2.jar"/>
 	 				<exclude name="antlr3-ant.jar"/>
 	 				<exclude name="stringtemplate-3.2.jar"/>
 	 				<exclude name="stencil.jar"/>
 	 			</fileset>
 	 		</path>
 		</pathconvert>
 		
		<jar jarfile="${release}/${JarFile}" includes="*.class" basedir=".">
			<fileset dir="${target}"/>
			<manifest>
				<attribute name="Created-By" value="Joseph A. Cottam"/>
				<attribute name="Main-Class" value="stencil.explore.Application"/>
				<attribute name="Class-Path" value="${jarClasspath}"/>
			</manifest>
		</jar>

 		
 		<!--create Zip file with jar -->
 		 		
 		<property name="lib.app.dir" location="${release}/lib"/>
 		<mkdir dir="${lib.app.dir}"/>
 		<copy todir="${lib.app.dir}">
 			<fileset dir="${runtimeLibrary}">
 				<include name="*.jar"/>
 				<exclude name="antlr3-ant.jar"/>
				<exclude name="antlr-3.2.jar"/>
 				<exclude name="stringtemplate-3.2.jar"/>
 				<exclude name="stencil.jar"/>
 			</fileset>
 		</copy>

 		<copy file="./TestData/Stencil.properties" tofile="${release}/Stencil.properties" overwrite="true"/>
 		<copy file="./TestData/Explore.properties" tofile="${release}/Explore.properties" overwrite="true"/>
 		<copy todir="${release}/Examples/" overwrite="true">
 			<fileset dir="./TestData/RegressionImages/">
 				<include name="**"/>
 				<exclude name="**/*.png"/>
 			</fileset>
 		</copy>
 		
 		<copy todir="${release}" overwrite="true">
 			<fileset dir="./ReleaseIncludes/" includes="**"/>
 		</copy>
 		
 		<!--Create the zip files-->
 		<zip destfile="${result}" basedir="${release}"/>
 		
 		<zip destfile="src_${today}.zip" basedir=".">
 			<exclude name="**/jrat.output/**" />
 			<exclude name="**/TestData/**" />
 			<exclude name="**/bin/**" />
 			<exclude name="**/${release}/**" />
 			<exclude name="jrat.xml"/>
 			<exclude name="*.zip"/>
 		</zip>
 		
 		<!--Clean up temporaries-->
 		<delete dir="${release}"/>
 		<delete file="${JarFile}"/>
	</target> 
 	
 	
	<!--GUnit tests--> 	
 	<target name="RunTests" depends="StencilGrammar"> 
	 	<property name="testsLocation" location="bin/stencil/unittests/parser/string/" />

		<jar jarfile="${runtimeLibrary}/Stencil.jar" includes="*.class" basedir=".">
			<fileset dir="bin"/>
		</jar>
		<antcall target="EclipseRefresh"/>

		<java classname="org.antlr.gunit.Interp" fork="yes" dir="${target}">
			<classpath>
				<pathelement path="${testsLocation}"/>
				<pathelement path="${java.class.path}"/>
				<pathelement path="."/>
			    <fileset dir="${runtimeLibrary}" includes="*.jar"/>
			</classpath>
			<arg value="${testsLocation}/Stencil.gunit"/>
		</java>
 		
 		<delete file="${runtimeLibrary}/Stencil.jar"/>
	</target>
 </project>